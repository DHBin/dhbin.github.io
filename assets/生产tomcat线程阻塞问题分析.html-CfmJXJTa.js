import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,b as i,o as n}from"./app-CqnfWZLp.js";const r={};function p(s,t){return n(),e("div",null,t[0]||(t[0]=[i('<h1 id="生产tomcat线程阻塞问题分析" tabindex="-1"><a class="header-anchor" href="#生产tomcat线程阻塞问题分析"><span>生产tomcat线程阻塞问题分析</span></a></h1><h2 id="现象" tabindex="-1"><a class="header-anchor" href="#现象"><span>现象</span></a></h2><p>当大量的请求到服务，过一会，服务无法响应请求，k8s配置了健康检查，服务被k8s重启</p><h2 id="分析" tabindex="-1"><a class="header-anchor" href="#分析"><span>分析</span></a></h2><p>让运维的同学把thread和heap dump了下来，打开一看，全部tomcat的线程阻塞在Druid连接池上</p><h3 id="线程情况" tabindex="-1"><a class="header-anchor" href="#线程情况"><span>线程情况</span></a></h3><p><img src="https://cdn.dhbin.cn/202303291704461.png" alt="image-20230329092255788_1"></p><p>所有的tomcat线程堵塞在<code>com.alibaba.druid.pool.DruidDataSource.takeLast</code>，该方法是从Druid的连接池取出连接，当线程池没有空闲的时候，一直阻塞等待。</p><h3 id="堆文件分析" tabindex="-1"><a class="header-anchor" href="#堆文件分析"><span>堆文件分析</span></a></h3><p><img src="https://cdn.dhbin.cn/202303291703621.png" alt="heap"></p><ul><li>notEmptyWaitThreadPeak：当前等待连接池的线程数</li><li>poolingCount：连接池中的连接数</li><li>maxActive：连接池的最大容量</li><li>activeCount：当前活跃（在执行sql的连接）数</li></ul><p>通过上图知道在一个容量为8的连接池中，有200个线程在等待一个poolingCount为0的连接池，刚好对应上tomcat的连接数</p><h2 id="解决" tabindex="-1"><a class="header-anchor" href="#解决"><span>解决</span></a></h2><p>项目使用了ShardingSphere做分表分库，在配置ShardingSphere时，没有对每个数据库配置连接池大小，使用了默认配置，默认maxActive最大为8，当有慢sql阻塞的时候，很容易就出现整个服务阻塞，应当增大连接池的大小</p><p>项目中配置了<code>spring.datasource.druid.max-active</code>大小，但是shardingsphere不兼容该配置，需要像一下方式配置</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-properties"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">spring.shardingsphere.datasource.&lt;datasource-name&gt;.</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">max-active</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> xxx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',16)]))}const d=a(r,[["render",p]]),h=JSON.parse('{"path":"/tech/java/%E7%94%9F%E4%BA%A7tomcat%E7%BA%BF%E7%A8%8B%E9%98%BB%E5%A1%9E%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90.html","title":"生产tomcat线程阻塞问题分析","lang":"zh-CN","frontmatter":{"date":"2023-03-29T17:16:00.000Z","category":["Java"],"tag":["问题排查","Druid"],"description":"生产tomcat线程阻塞问题分析 现象 当大量的请求到服务，过一会，服务无法响应请求，k8s配置了健康检查，服务被k8s重启 分析 让运维的同学把thread和heap dump了下来，打开一看，全部tomcat的线程阻塞在Druid连接池上 线程情况 image-20230329092255788_1 所有的tomcat线程堵塞在com.alibab...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"生产tomcat线程阻塞问题分析\\",\\"image\\":[\\"https://cdn.dhbin.cn/202303291704461.png\\",\\"https://cdn.dhbin.cn/202303291703621.png\\"],\\"datePublished\\":\\"2023-03-29T17:16:00.000Z\\",\\"dateModified\\":\\"2023-03-29T09:43:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"DHB\\",\\"url\\":\\"https://dhbin.cn\\"}]}"],["meta",{"property":"og:url","content":"https://dhbin.cn/tech/java/%E7%94%9F%E4%BA%A7tomcat%E7%BA%BF%E7%A8%8B%E9%98%BB%E5%A1%9E%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90.html"}],["meta",{"property":"og:site_name","content":"HB技术栈"}],["meta",{"property":"og:title","content":"生产tomcat线程阻塞问题分析"}],["meta",{"property":"og:description","content":"生产tomcat线程阻塞问题分析 现象 当大量的请求到服务，过一会，服务无法响应请求，k8s配置了健康检查，服务被k8s重启 分析 让运维的同学把thread和heap dump了下来，打开一看，全部tomcat的线程阻塞在Druid连接池上 线程情况 image-20230329092255788_1 所有的tomcat线程堵塞在com.alibab..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.dhbin.cn/202303291704461.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-29T09:43:21.000Z"}],["meta",{"property":"article:tag","content":"Druid"}],["meta",{"property":"article:tag","content":"问题排查"}],["meta",{"property":"article:published_time","content":"2023-03-29T17:16:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-29T09:43:21.000Z"}]]},"git":{"createdTime":1680083001000,"updatedTime":1680083001000,"contributors":[{"name":"dhb","username":"dhb","email":"xx158@qq.com","commits":1,"url":"https://github.com/dhb"}]},"readingTime":{"minutes":1.18,"words":354},"excerpt":"\\n<h2>现象</h2>\\n<p>当大量的请求到服务，过一会，服务无法响应请求，k8s配置了健康检查，服务被k8s重启</p>\\n<h2>分析</h2>\\n<p>让运维的同学把thread和heap dump了下来，打开一看，全部tomcat的线程阻塞在Druid连接池上</p>\\n<h3>线程情况</h3>\\n<p><img src=\\"https://cdn.dhbin.cn/202303291704461.png\\" alt=\\"image-20230329092255788_1\\"></p>\\n<p>所有的tomcat线程堵塞在<code>com.alibaba.druid.pool.DruidDataSource.takeLast</code>，该方法是从Druid的连接池取出连接，当线程池没有空闲的时候，一直阻塞等待。</p>","autoDesc":true}');export{d as comp,h as data};
